{"version":3,"sources":["auth/OidcManager.ts","auth/authService.ts","App.tsx","Router/Routes.tsx","index.tsx"],"names":["OidcManager","config","this","userManager","UserManager","events","addUserLoaded","onUserLoaded","addSilentRenewError","onError","addUserUnloaded","onUserUnloaded","addUserSignedOut","addAccessTokenExpired","onAccessTokenExpired","document","location","toString","includes","redirect_uri","signinRedirectCallback","then","user","state","url","getUser","type","silent_redirect_uri","signinSilentCallback","oidcUser","signinSilent","error","removeUserLoaded","removeSilentRenewError","removeUserUnloaded","removeUserSignedOut","removeAccessTokenExpired","signinRedirect","_document","configuration","client_id","response_type","post_logout_redirect_uri","scope","authority","automaticSilentRenew","loadUserInfo","App","props","undefined","isLoggedIn","meta","date","Date","timerID","console","log","init","status","a","async","getUserManager","signoutRedirect","triggerLogoutFlow","setState","oldState","updateUser","result","id_token","setError","getState","defaultConfig","clearStaleState","setInterval","tick","clearInterval","className","profile","name","toLocaleTimeString","disabled","onClick","triggerLogin","triggerLogout","readOnly","value","JSON","stringify","Component","PageNotFound","Routes","exact","path","component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.95bfa0f3.chunk.js","sourcesContent":["import { UserManager, UserManagerSettings, User } from \"oidc-client\";\nexport default class OidcManager {\n  public static userManager: UserManager;\n  static _document: Document = document;\n  static state: any = { oidcUser: null };\n\n  static init(config: UserManagerSettings) {\n    // console.log(\"init oidc manager...\");\n    this.userManager = new UserManager(config);\n    const { events } = this.userManager;\n    events.addUserLoaded(this.onUserLoaded);\n    events.addSilentRenewError(this.onError);\n    events.addUserUnloaded(this.onUserUnloaded);\n    events.addUserSignedOut(this.onUserUnloaded);\n    events.addAccessTokenExpired(this.onAccessTokenExpired);\n    // console.log(\"events: \", events);\n    \n    if (document.location.toString().includes(`${config.redirect_uri}`)) {\n      // console.log(\"signin redirecting... redirect_uri: \", config.redirect_uri);\n      return this.userManager\n        .signinRedirectCallback()\n        .then(user => {\n          // console.log(\"returned user from signinRedirectCallback user: \", user)\n          \n          if (user.state.url) {\n            document.location = user.state.url;\n          }\n          \n        })\n        .then(() => {\n          return this.userManager.getUser().then(user => {\n            return { type: \"callback\", user: user };\n          });\n          \n        });\n    } else if (document.location.toString().includes(config.silent_redirect_uri)) {\n      // console.log(\"silent redirect right?\");\n      return this.userManager.signinSilentCallback().then(() => ({ type: \"callback\" }));\n    }\n    // console.log(\"we are done?\");    \n    return this.userManager.getUser()\n    .then(user => {\n      this.state.oidcUser = user;\n      return { type: \"user\", oidcUser: user };\n    });\n  }\n\n  static getUserManager() {\n    return this.userManager;\n  }\n\n  static getState() {\n    return this.state;\n  }\n\n  static onUserLoaded(user: User) {\n    this.state = {\n      oidcUser: user\n    };\n  };\n  \n  static onUserUnloaded() {\n    this.state = {\n      oidcUser: null\n    };\n  };\n  \n  static onAccessTokenExpired() {\n    // console.log(\"this.state: \", this.state);\n    this.state = {\n      oidcUser: null\n    };\n    return this.userManager.signinSilent();\n  };\n  \n  static onError(error: any) {\n    this.state = {\n      oidcUser: error,\n    };\n  };\n\n  public static logout() {\n    // console.log(\"logging out!\");\n    this.state = {\n      oidcUser: null\n    };\n    if (this.userManager) {\n      const { events } = this.userManager;\n      events.removeUserLoaded(this.onUserLoaded);\n      events.removeSilentRenewError(this.onError);\n      events.removeUserUnloaded(this.onUserUnloaded);\n      events.removeUserSignedOut(this.onUserUnloaded);\n      events.removeAccessTokenExpired(this.onAccessTokenExpired);\n      // console.log(\"logged out\");\n    } else {\n      // console.log(\"no usermanager was found\")\n    }\n  };\n  \n  public static signinSilent() {\n    this.state = {\n      oidcUser: null\n    };\n    return this.userManager.signinSilent();\n  }\n  \n  public static signinRedirect(url?: string) {\n    if (!url) {\n      url = document.location.toString();\n    }\n    return this.userManager.signinRedirect({\n      state: { url: url }\n    });\n  }\n}\n","import OidcManager from './OidcManager';\nimport { UserManagerSettings } from 'oidc-client';\n\nexport const configuration: UserManagerSettings = {\n  client_id: \"https://api.hel.fi/auth/berths\",\n  redirect_uri: \"https://zeukkari.github.io/react-app-oidc/callback/\",\n  // redirect_uri: \"http://localhost:3000/callback/\",\n  // redirect_uri: \"https://oidcdebugger.com/debug\",\n  response_type: \"id_token token\",\n  post_logout_redirect_uri: \"https://zeukkari.github.io/react-app-oidc/\",\n  scope: \"openid https://api.hel.fi/auth/berths https://api.hel.fi/auth/helsinkiprofile\",\n  // authority: \"https://tunnistamo.test.kuva.hel.ninja\",\n  authority: \"http://tunnistamo-backend:8000\",\n  silent_redirect_uri: \"https://zeukkari.github.io/react-app-oidc/silent_callback/\",\n  automaticSilentRenew: true,\n  loadUserInfo: true\n};\n\nexport const triggerLoginFlow = () => {\n  console.log(\"init auth\", configuration);\n  OidcManager.init(configuration).then(function (status: any) {\n    console.log(\"status: \", status);\n    if (status.type !== \"callback\") {\n      if (!status.user) {\n        // start the signin\n        OidcManager.signinRedirect();\n      } else {\n        // run you application\n        console.log(\"My application started\", status);\n      }\n    }\n  })\n}\n\nexport const triggerLogoutFlow = async () => {\n  console.log(\"trigger logout\");\n  const user = await OidcManager.userManager.getUser();\n  console.log(\"user: \", user);\n  if(user != null) {\n    OidcManager.getUserManager().signoutRedirect();\n  }\n}\n","import React, { Component } from 'react';\nimport './App.css';\nimport { triggerLoginFlow, triggerLogoutFlow, configuration as defaultConfig } from './auth/authService';\nimport OidcManager from './auth/OidcManager';\nimport { User } from 'oidc-client';\n\nclass App extends Component<{}, { meta: { date: Date, timerID: null & any }, user?: { oidcUser?: User }, isLoggedIn: boolean }> {\n\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      user: undefined,\n      isLoggedIn: false,\n      meta: {\n        date: new Date(),\n        timerID: null,\n      }\n    }\n  }\n\n  triggerLogin() {\n    triggerLoginFlow();\n    // OidcManager.init();\n    // this.setState({ user: OidcManager.state });\n  }\n\n  triggerLogout() {\n    triggerLogoutFlow();\n  }\n\n  tick() {\n    this.setState(oldState => ({\n      ...oldState,\n      meta: {\n        timerID: oldState.meta.timerID,\n        date: new Date(),\n      }\n    }))\n  }\n\n  async componentDidMount() {\n    const updateUser = (result: any) => this.setState(oldState => ({ ...oldState, error: {}, user: result, isLoggedIn: result.oidcUser?.id_token !== undefined }));\n    const setError = (result: any) => this.setState(oldState => ({ ...oldState, error: result, user: {}, isLoggedIn: result.oidcUser?.id_token !== undefined }));\n    // OidcManager.init(defaultConfig).then((result: any) => { console.log(\"result: \", result); updateUser(result) });\n\n    console.log(\"OidcManager.getUserManager().state: \", OidcManager.getState());\n\n    try {\n      const result = await OidcManager.init(defaultConfig);\n      console.log(\"result: \", result);\n      updateUser(result);\n      // .then((result: any) => { console.log(\"result: \", result); updateUser(result) });\n    }\n    catch (error) {\n      // alert(\"error!\");\n      console.error(error);\n      setError(error.toString());\n      await OidcManager.getUserManager().clearStaleState();\n    }\n\n    this.setState(oldState => ({\n      ...oldState, meta: {\n        ...oldState.meta, timerID: setInterval(\n          () => this.tick(),\n          1000\n        )\n      }\n    }))\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.state.meta.timerID);\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div>\n          {this.state.isLoggedIn && (\n            <h2>{`Hello ${this.state.user?.oidcUser?.profile.name}`}</h2>\n          )}\n          {!this.state.isLoggedIn && (\n            <h2>{`You are not signed in`}</h2>\n          )}\n          <h2>It is {this.state.meta.date.toLocaleTimeString()}.</h2>\n        </div>\n        <span>\n          <button className=\"button\" disabled={this.state.isLoggedIn} onClick={() => this.triggerLogin()}> Login</button>\n          <button className=\"button\" disabled={!this.state.isLoggedIn} onClick={() => this.triggerLogout()}> Logout </button>\n        </span>\n        <div className=\"container\">\n          <div><h3>user info: </h3><div> <textarea readOnly value={JSON.stringify(this.state, null, '  ')}></textarea> <pre> {}</pre></div></div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport App from '../App';\n\nconst PageNotFound = () => (\n  <div>Page not found</div>\n);\n\nconst Routes = () => (\n  <Switch>\n    <Route exact path=\"/\" component={App} />\n    <Route path=\"/callback\" component={App} />\n    <Route component={PageNotFound} />\n  </Switch>\n);\n\nexport default Routes;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport './index.css';\nimport Routes from './Router/Routes';\n\nReactDOM.render(<Router><Routes /></Router>, document.getElementById('root'));\n"],"sourceRoot":""}